<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL Injection on Jerry&#39;s Blog</title>
    <link>https://GengDeWu.github.io/tags/sql-injection/</link>
    <description>Recent content in SQL Injection on Jerry&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 03 Mar 2021 22:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://GengDeWu.github.io/tags/sql-injection/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(Security)WebGoat 安裝 &amp; 漏洞演練</title>
      <link>https://GengDeWu.github.io/blog/security_webgoat/</link>
      <pubDate>Wed, 03 Mar 2021 22:00:00 +0800</pubDate>
      
      <guid>https://GengDeWu.github.io/blog/security_webgoat/</guid>
      <description>本篇同步發佈在 Medium 平台上 Medium 連結  前言 WebGoat 是專門用來練習漏洞的 Web 應用程式，所以裡面的網頁都是漏洞百出的，因此官方也建議在使用 WebGoat 練習時，最好是把網路中斷，以免有心人士利用，讓使用者反而變成受害者。</description>
    </item>
    
    <item>
      <title>(SQL) 爲什麼參數化查詢可以防止SQL Injection/如何觀看Execution Plan上的差異</title>
      <link>https://GengDeWu.github.io/blog/sql_server_sql_injection/</link>
      <pubDate>Sat, 16 Jan 2021 23:00:00 +0800</pubDate>
      
      <guid>https://GengDeWu.github.io/blog/sql_server_sql_injection/</guid>
      <description>本篇同步發佈在 Medium 平台上 Medium 連結 很多人都知道 SQL Injection 的攻擊原理，也知道參數化查詢可以防止 SQL Injection，但是參數化查詢爲什麼能防止 SQL Injection呢？本篇文章主要說明的正是這個問題，在了解主要原因(不使用組字串方式執行 SQL)後，將帶你了解如何觀看 Execution Plan 上的差異。</description>
    </item>
    
  </channel>
</rss>